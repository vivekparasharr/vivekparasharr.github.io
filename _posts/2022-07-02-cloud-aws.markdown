---
layout: post
title: "Important AWS Services that you need to Know Now"
categories: statistics, xx
---
Amazon Web Services (AWS) is a cloud-based platform that provides a wide range of infrastructure, platform, and software services. It was launched in 2006 and has since become one of the most popular cloud computing platforms in the world, used by individuals, small businesses, and large enterprises alike.

AWS is known for its flexibility, scalability, and cost-effectiveness, allowing businesses to pay only for the services they use and scale up or down as needed. Its reliability and security features also make it a popular choice for businesses that need to store and process sensitive data.

AWS provides a wide range of services, including compute, storage, databases, analytics, machine learning, Internet of Things (IoT), security, and more. It also offers a variety of deployment models, including public, private, and hybrid clouds, as well as edge computing services that allow computing to be performed closer to the source of data.

Here are some of the most common services:
- Compute services, such as Amazon Elastic Compute Cloud (EC2) and AWS Lambda
- Storage services, such as Amazon Simple Storage Service (S3) and Elastic Block Store (EBS)
- Database services, such as Amazon Relational Database Service (RDS) and DynamoDB
- Networking services, such as Amazon Virtual Private Cloud (VPC) and Elastic Load Balancing (ELB)
- Management and monitoring services, such as AWS CloudFormation and AWS CloudWatch
- Security and compliance services, such as AWS Identity and Access Management (IAM) and AWS Key Management Service (KMS)
- Analytics and machine learning services, such as Amazon SageMaker and Amazon Redshift

Users can interact with these services using 
- SSH (Secure Shell) and AWS CLI (Command Line Interface)
- boto3 (a Python library used to interact with AWS resources)

---

#### Now, lets review these services one by one: 

##### EC2
Amazon Elastic Compute Cloud (EC2) is a web service that provides resizable compute capacity in the cloud. EC2 allows users to launch and manage virtual machines, called instances, in the AWS cloud. With EC2, users can select from a variety of instance types optimized for different use cases, and can scale up or down their compute resources as needed. EC2 also allows users to choose from a range of operating systems, including Amazon Linux, Ubuntu, Windows, and others. EC2 instances can be used to run a wide range of applications, from simple web servers to complex, multi-tier applications.

SSH (Secure Shell) is used to establish a secure, encrypted connection with the EC2 instance, allowing you to remotely log in and execute commands on the server. The basic syntax for the SSH command is 
```bash
ssh [username]@[EC2 instance public DNS]
```
You will need to replace [username] with the username you created when setting up your EC2 instance, and [EC2 instance public DNS] with the public DNS address for your instance. Once you have established an SSH connection, you can execute commands on the EC2 instance just as you would on a local machine.

##### Lambda
AWS Lambda is a serverless compute service provided by Amazon Web Services. With Lambda, you can run your code in response to various events such as changes to data in an Amazon S3 bucket or an update to a DynamoDB table. You upload your code to Lambda, and it takes care of everything required to run and scale your code with high availability. AWS Lambda is an event-driven service, meaning it only runs when an event triggers it.

AWS Lambda console or AWS Command Line Interface (CLI) can be used to create, configure, and deploy your Lambda functions. Following commands allow you to perform common tasks such as creating, updating, invoking, and deleting your Lambda functions using the AWS CLI.
```bash
aws lambda create-function: Creates a new Lambda function.
aws lambda update-function-code: Uploads new code to an existing Lambda function.
aws lambda invoke: Invokes a Lambda function.
aws lambda delete-function: Deletes a Lambda function.
```

Boto3 can also be used to create a new Lambda function. Following code uses the boto3.client() method to create a client object for interacting with AWS Lambda. It then defines the code for the Lambda function, which is stored in a ZIP file. Finally, it uses the lambda_client.create_function() method to create the Lambda function, specifying the function name, runtime, IAM role, handler, and code. The response from this method call contains information about the newly created function.
```python
import boto3

# create a client object to interact with AWS Lambda
lambda_client = boto3.client('lambda')

# define the Lambda function's code
code = {'ZipFile': open('lambda_function.zip', 'rb').read()}

# create the Lambda function
response = lambda_client.create_function(
    FunctionName='my-function',
    Runtime='python3.8',
    Role='arn:aws:iam::123456789012:role/lambda-role',
    Handler='lambda_function.handler',
    Code=code
)

print(response)
```

##### S3 (Simple Storage Service)
Amazon S3 (Simple Storage Service) is a cloud storage service offered by Amazon Web Services (AWS). It provides a simple web interface to store and retrieve data from anywhere on the internet. S3 is designed to be highly scalable, durable, and secure, making it a popular choice for data storage, backup and archival, content distribution, and many other use cases. S3 allows you to store and retrieve any amount of data at any time, from anywhere on the web. It also offers different storage classes to help optimize costs based on access frequency and retrieval times.

Following AWS CLI code can be used in SSH to upload, download, and delete a file from S3:
```bash
aws s3 cp /path/to/local/file s3://bucket-name/key-name  #code to upload
aws s3 cp s3://bucket-name/key-name /path/to/local/file  #code to download
aws s3 rm s3://bucket-name/key-name  #code to delete a file
```

Following boto3 code can be used to upload, download, and delete a file from S3. Note that you need to replace your-region, your-access-key, your-secret-key, your-bucket-name, your-file-name, and new-file-name with your own values. Also, make sure that you have the necessary permissions to read, write, and delete objects in your S3 bucket.
```python
import boto3

# set the S3 region and access keys
s3 = boto3.resource('s3', region_name='your-region', aws_access_key_id='your-access-key', aws_secret_access_key='your-secret-key')

# read a file from S3
bucket_name = 'your-bucket-name'
file_name = 'your-file-name'
object = s3.Object(bucket_name, file_name)
file_content = object.get()['Body'].read().decode('utf-8')
print(file_content)

# write a file to S3
new_file_name = 'new-file-name'
new_file_content = 'This is the content of the new file.'
object = s3.Object(bucket_name, new_file_name)
object.put(Body=new_file_content.encode('utf-8'))

# delete a file from S3
object = s3.Object(bucket_name, file_name)
object.delete()
```

##### EBS (Elastic Block Storage)


Comments welcome!

{% include disqus_comments.html %}
